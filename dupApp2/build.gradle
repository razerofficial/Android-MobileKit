apply plugin: 'com.android.application'
buildscript {
    repositories {
        mavenCentral()
    }
}

android {
    flavorDimensions "default"

    lintOptions {
        abortOnError false
    }

    compileSdkVersion 30
    buildToolsVersion "31.0.0"


    defaultConfig {
        applicationId "com.razerzone.dup"
        minSdkVersion 29
        targetSdkVersion 30
        versionCode 99
        versionName "1.0.0"
        vectorDrawables.useSupportLibrary = true

    }
    productFlavors {
        prod {
            dimension "default"
            applicationId "com.razerzone.dupprod"
        }
    }

    signingConfigs {
        debug {
            storeFile file("../RazerTestKey.jks")
            storePassword "Razer650"
            keyAlias "Razer Test Key"
            keyPassword "Razer650"
        }


    }

    buildTypes {
        release {
            multiDexEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            /*important remove if razer will sign the app.*/
            resValue "string", "razer_account_type_name_label", "Razer Thirdparty"
            resValue "string", "razer_account_type_name_raw", "com.razer.account.sso.thirdparty"
            resValue "string", "razer_account_type_name_raw_cert", "com.razer.account.sso.thirdparty.cert"
            /*important remove if razer will sign the app.*/
        }

        debug {
            multiDexEnabled true
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            /*important remove if razer will sign the app.*/
            resValue "string", "razer_account_type_name_label", "Razer Thirdparty"
            resValue "string", "razer_account_type_name_raw", "com.razer.account.sso.thirdparty"
            resValue "string", "razer_account_type_name_raw_cert", "com.razer.account.sso.thirdparty.cert"
            /*important remove if razer will sign the app.*/
        }

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'http://nexus-mobile.razerapi.com:8081/repository/thirdparty'
        credentials {
            username 'thirdparty'
            password 'thirdparty_123'
        }
    }
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.infstory:proguard-annotations:1.0.2'
    implementation 'com.jakewharton:butterknife:10.1.0'
    implementation "com.razer.android:ui:2.0.1"
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.1.0'
    implementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    implementation 'androidx.appcompat:appcompat:1.1.0-alpha05'
    implementation 'androidx.test:rules:1.1.1'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.facebook.fresco:fresco:2.4.0'
}


configurations.all {
    resolutionStrategy.eachDependency { details ->
        if (details.requested.group == 'androidx.appcompat'
                && !details.requested.name.contains('androidx')) {
            details.useVersion "1.1.0-alpha05"
        }

    }
}
apply plugin: 'com.google.gms.google-services'